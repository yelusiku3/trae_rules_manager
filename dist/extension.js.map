{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://trae-rules-manager/./src/extension.ts","webpack://trae-rules-manager/external commonjs \"vscode\"","webpack://trae-rules-manager/./src/rolePanel.ts","webpack://trae-rules-manager/webpack/bootstrap","webpack://trae-rules-manager/webpack/startup"],"sourcesContent":["import * as vscode from 'vscode';\nimport { RolePanel } from './rolePanel';\n\nexport function activate(context: vscode.ExtensionContext) {\n    // 注册显示角色面板的命令\n    let disposable = vscode.commands.registerCommand('trae-rules-manager.showRolePanel', () => {\n        RolePanel.createOrShow(context.extensionUri);\n    });\n\n    context.subscriptions.push(disposable);\n\n    // 注册文本编辑器变更事件监听\n    let activeEditor = vscode.window.activeTextEditor;\n    let timeout: NodeJS.Timeout | undefined = undefined;\n\n    function triggerRolePanel() {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n        timeout = setTimeout(() => {\n            const editor = vscode.window.activeTextEditor;\n            if (editor) {\n                const position = editor.selection.active;\n                const document = editor.document;\n                const line = document.lineAt(position.line);\n                const lineText = line.text.substring(0, position.character);\n                \n                // 检查是否输入了触发字符\n                const config = vscode.workspace.getConfiguration('trae-rules-manager');\n                const triggerChar = config.get<string>('triggerChar', '@');\n                if (lineText.endsWith(triggerChar)) {\n                    RolePanel.createOrShow(context.extensionUri);\n                }\n            }\n        }, vscode.workspace.getConfiguration('trae-rules-manager').get('debounceDelay', 300));\n    }\n\n    // 监听文本变更事件\n    vscode.workspace.onDidChangeTextDocument(event => {\n        if (activeEditor && event.document === activeEditor.document) {\n            triggerRolePanel();\n        }\n    }, null, context.subscriptions);\n\n    // 监听活动编辑器变更事件\n    vscode.window.onDidChangeActiveTextEditor(editor => {\n        activeEditor = editor;\n    }, null, context.subscriptions);\n}\n\nexport function deactivate() {}","module.exports = require(\"vscode\");","import * as vscode from 'vscode';\n\nexport class RolePanel {\n    public static currentPanel: RolePanel | undefined;\n    private readonly _panel: vscode.WebviewPanel;\n    private _disposables: vscode.Disposable[] = [];\n\n    private constructor(panel: vscode.WebviewPanel, extensionUri: vscode.Uri) {\n        this._panel = panel;\n        this._panel.onDidDispose(() => this.dispose(), null, this._disposables);\n        this._panel.webview.html = this._getWebviewContent(this._panel.webview, extensionUri);\n        this._panel.webview.onDidReceiveMessage(\n            message => {\n                switch (message.command) {\n                    case 'selectRole':\n                        // 处理角色选择\n                        const editor = vscode.window.activeTextEditor;\n                        if (editor) {\n                            const position = editor.selection.active;\n                            const line = editor.document.lineAt(position.line);\n                            const lineText = line.text.substring(0, position.character);\n                            const triggerChar = vscode.workspace.getConfiguration('trae-rules-manager').get<string>('triggerChar', '@');\n                            if (lineText.endsWith(triggerChar)) {\n                                editor.edit(editBuilder => {\n                                    // 删除触发字符\n                                    const startPos = new vscode.Position(position.line, position.character - 1);\n                                    const endPos = new vscode.Position(position.line, position.character);\n                                    editBuilder.delete(new vscode.Range(startPos, endPos));\n                                    // 插入角色提示词\n                                    editBuilder.insert(position, message.role.prompt);\n                                });\n                            }\n                        }\n                        this._panel.dispose();\n                        break;\n                }\n            },\n            null,\n            this._disposables\n        );\n    }\n\n    public static createOrShow(extensionUri: vscode.Uri) {\n        const column = vscode.window.activeTextEditor\n            ? vscode.window.activeTextEditor.viewColumn\n            : undefined;\n\n        if (RolePanel.currentPanel) {\n            RolePanel.currentPanel._panel.reveal(column);\n            return;\n        }\n\n        const panel = vscode.window.createWebviewPanel(\n            'traeRoleManager',\n            'Trae Role Manager',\n            column || vscode.ViewColumn.One,\n            {\n                enableScripts: true,\n                retainContextWhenHidden: true,\n                localResourceRoots: [extensionUri]\n            }\n        );\n\n        RolePanel.currentPanel = new RolePanel(panel, extensionUri);\n    }\n\n    private _getWebviewContent(webview: vscode.Webview, extensionUri: vscode.Uri): string {\n        // 获取角色配置\n        const roles = [\n            { id: 1, name: '需求分析师', description: '专注于需求分析和文档编写', prompt: 'As a requirement analyst, please help me analyze the following requirements:\\n' },\n            { id: 2, name: '架构师', description: '系统架构设计专家', prompt: 'As a system architect, please help me design the architecture for:\\n' },\n            { id: 3, name: '代码审查员', description: '代码质量和最佳实践', prompt: 'As a code reviewer, please review the following code:\\n' },\n        ];\n    \n        return `\n            <!DOCTYPE html>\n            <html lang=\"zh-CN\">\n            <head>\n                <meta charset=\"UTF-8\">\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n                <title>Trae Role Manager</title>\n                <style>\n                    body {\n                        font-family: var(--vscode-font-family);\n                        padding: 10px;\n                        color: var(--vscode-foreground);\n                        background-color: var(--vscode-editor-background);\n                    }\n                    .search-box {\n                        width: 100%;\n                        padding: 8px;\n                        margin-bottom: 10px;\n                        border: 1px solid var(--vscode-input-border);\n                        background: var(--vscode-input-background);\n                        color: var(--vscode-input-foreground);\n                    }\n                    .role-list {\n                        display: flex;\n                        flex-direction: column;\n                        gap: 8px;\n                    }\n                    .role-item {\n                        padding: 10px;\n                        border: 1px solid var(--vscode-panel-border);\n                        border-radius: 4px;\n                        cursor: pointer;\n                    }\n                    .role-item:hover {\n                        background: var(--vscode-list-hoverBackground);\n                    }\n                    .role-name {\n                        font-weight: bold;\n                        margin-bottom: 4px;\n                    }\n                    .role-description {\n                        font-size: 0.9em;\n                        color: var(--vscode-descriptionForeground);\n                    }\n                </style>\n            </head>\n            <body>\n                <input type=\"text\" class=\"search-box\" placeholder=\"搜索角色...\" id=\"searchInput\">\n                <div class=\"role-list\" id=\"roleList\">\n                    ${roles.map(role => `\n                        <div class=\"role-item\" data-role='${JSON.stringify(role).replace(/'/g, \"&apos;\")}'>\n                            <div class=\"role-name\">${role.name}</div>\n                            <div class=\"role-description\">${role.description}</div>\n                        </div>\n                    `).join('')}\n                </div>\n                <script>\n                    const vscode = acquireVsCodeApi();\n                    const searchInput = document.getElementById('searchInput');\n                    const roleList = document.getElementById('roleList');\n                    const roles = ${JSON.stringify(roles)};\n    \n                    // 搜索功能\n                    searchInput.addEventListener('input', (e) => {\n                        const searchText = e.target.value.toLowerCase();\n                        const filteredRoles = roles.filter(role =>\n                            role.name.toLowerCase().includes(searchText) ||\n                            role.description.toLowerCase().includes(searchText)\n                        );\n                        \n                        roleList.innerHTML = filteredRoles.map(role => \\`\n                            <div class=\"role-item\" data-role='\\${JSON.stringify(role).replace(/'/g, \"&apos;\")}'>\n                                <div class=\"role-name\">\\${role.name}</div>\n                                <div class=\"role-description\">\\${role.description}</div>\n                            </div>\n                        \\`).join('');\n                    });\n    \n                    // 角色选择\n                    roleList.addEventListener('click', (e) => {\n                        const roleItem = e.target.closest('.role-item');\n                        if (roleItem) {\n                            const role = JSON.parse(roleItem.dataset.role.replace(/&apos;/g, \"'\"));\n                            vscode.postMessage({\n                                command: 'selectRole',\n                                role: role\n                            });\n                        }\n                    });\n                </script>\n            </body>\n            </html>\n        `;\n    }\n\n    public dispose() {\n        RolePanel.currentPanel = undefined;\n        this._panel.dispose();\n        while (this._disposables.length) {\n            const disposable = this._disposables.pop();\n            if (disposable) {\n                disposable.dispose();\n            }\n        }\n    }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["context","disposable","vscode","commands","registerCommand","RolePanel","createOrShow","extensionUri","subscriptions","push","timeout","activeEditor","window","activeTextEditor","workspace","onDidChangeTextDocument","event","document","clearTimeout","setTimeout","editor","position","selection","active","lineText","lineAt","line","text","substring","character","triggerChar","getConfiguration","get","endsWith","onDidChangeActiveTextEditor","module","exports","require","panel","_disposables","this","_panel","onDidDispose","dispose","webview","html","_getWebviewContent","onDidReceiveMessage","message","command","edit","editBuilder","startPos","Position","endPos","delete","Range","insert","role","prompt","column","viewColumn","undefined","currentPanel","reveal","createWebviewPanel","ViewColumn","One","enableScripts","retainContextWhenHidden","localResourceRoots","roles","id","name","description","map","JSON","stringify","replace","join","length","pop","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}